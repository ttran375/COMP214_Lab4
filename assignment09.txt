-- Assignment 9-7: Updating Summary Data Tables
-- The Brewbean’s owner uses several summary sales data tables every day to monitor business
-- activity. The BB_SALES_SUM table holds the product ID, total sales in dollars, and total
-- quantity sold for each product. A trigger is needed so that every time an order is confirmed or
-- the ORDERPLACED column is updated to 1, the BB_SALES_SUM table is updated
-- accordingly. Create a trigger named BB_SALESUM_TRG that performs this task. Before testing,
-- reset the ORDERPLACED column to 0 for basket 3, as shown in the following code, and use
-- this basket to test the trigger:
-- UPDATE bb_basket
-- SET orderplaced = 0
-- WHERE idBasket = 3;
-- Notice that the BB_SALES_SUM table already contains some data. Test the trigger with
-- the following UPDATE statement, and confirm that the trigger is working correctly:
-- UPDATE bb_basket
-- SET orderplaced = 1
-- WHERE idBasket = 3;
-- Do a rollback and disable the trigger when you’re finished so that it doesn’t affect other
-- assignments.
-- Assignment 9-8: Maintaining an Audit Trail of Product Table Changes
-- The accuracy of product table data is critical, and the Brewbean’s owner wants to have an audit
-- file containing information on all DML activity on the BB_PRODUCT table. This information
-- should include the ID of the user performing the DML action, the date, the original values of the
-- changed row, and the new values. This audit table needs to track specific columns of concern,
-- including PRODUCTNAME, PRICE, SALESTART, SALEEND, and SALEPRICE. Create a table
-- named BB_PRODCHG_AUDIT to hold the relevant data, and then create a trigger named
-- BB_AUDIT_TRG that fires an update to this table whenever a specified column in the
-- BB_PRODUCT table changes.
-- TIP
-- Multiple columns can be listed in a trigger’s OF clause by separating them with commas.
-- Be sure to issue the following command. If you created the SALES_DATE_TRG trigger in the
-- chapter, it conflicts with this assignment.
-- ALTER TRIGGER sales_date_trg DISABLE;
-- Use the following UPDATE statement to test the trigger:
-- UPDATE bb_product
-- SET salestart = '05-MAY-2012',
-- saleend = '12-MAY-2012'
-- saleprice = 9
-- WHERE idProduct = 10;
-- When you’re finished, do a rollback and disable the trigger so that it doesn’t affect other
-- assignments.
